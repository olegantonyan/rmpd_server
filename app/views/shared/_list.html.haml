#filterrific_results
  = form_tag(defined?(destroy_multiple_path) ? destroy_multiple_path : nil, method: :delete)do
    %table.table.table-striped.table-hover.table-responsive.table-condensed
      %tr
        - if defined?(destroy_multiple_path)
          %th= check_box_tag "select_multiple_#{collection.model_name.name.underscore.gsub('/', '_')}"
        - columns.each do |column|
          %th= column[:heading] || localized_heading(collection, column[:attr])
        - if defined?(details_link)
          %th{class: 'text-right'}= t('views.shared.details', default: 'Details')

      - collection.each do |item|
        %tr{class: (defined?(row_class) ? row_class.call(item) : '')}
          - if defined?(destroy_multiple_path)
            %td= check_box_tag "#{collection.model_name.name.underscore}_ids[]", item.id, false, class: "check_box_#{collection.model_name.name.underscore.gsub('/', '_')}_ids"
          - columns.each do |column|
            %td= attr_link_show(item, column[:attr], column[:link])
          - if defined?(details_link)
            - if policy_presenter(item).show?
              %td{class: 'text-right'}= attr_link_show(item, nil, details_link, link_class: 'btn btn-default btn-sm', link_text: icon_text('ellipsis-h'))
            - else
              %td{class: 'text-right'}= icon('ban')

    - if defined?(destroy_multiple_path)
      = submit_tag t('views.shared.delete_selected', default: 'Delete selected'), data: { confirm: t('views.shared.are_you_sure', default: 'Are you sure?') }, class: 'btn btn-danger', id: 'delete-multiple-button'

    - if defined?(new_path) && policy_presenter(collection).new?
      .pull-right
        = link_to icon_text('plus', t('views.shared.new', default: 'Add new')), new_path, class: 'btn btn-success'

    = tag :br
    = render partial: 'shared/paginate', locals: { collection: collection }

:javascript
  (function() {
    var select_multiple_element = $("#select_multiple_#{collection.model_name.name.underscore.gsub('/', '_')}")
    var checkboxes = $(".check_box_#{collection.model_name.name.underscore.gsub('/', '_')}_ids");
    var delete_selected_button = $('#delete-multiple-button');

    var check_deldete_all_button_state = function() {
      var any_checked = false;
      checkboxes.each(function(index) {
        if(this.checked) {
          any_checked = true;
        }
      });
      if(any_checked) {
        delete_selected_button.show();
      } else {
        delete_selected_button.hide();
      }
    };

    select_multiple_element.on('change', function() {
      checkboxes.prop('checked', this.checked);
      check_deldete_all_button_state();
    });

    checkboxes.on('change', function() {
      check_deldete_all_button_state();
    });
    check_deldete_all_button_state();
  })();
